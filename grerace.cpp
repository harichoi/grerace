#include <windows.h>
#include <Stdio.h>
#include <math.h>
#include <string.h>
#include <memory.h>
#include "resource.h"

#define HEIGHT 8
#define WIDTH 10
#define DEFX 31
#define DEFY 9
#define	BSIZE 30
#define startlev 1

int map[256][256];
int keybd[256];
int fx, fy, sx, sy;
int lev;
int start;
int tim,limit[100]={0,60,55,300,100,100,450,500,550,360,630,300,280,1400,350};
double x; double y;
double av;
double rotate;
double v;
HBITMAP block[10], car, carmask, madeby, levelmask, explainbit, levelbit, bgbit, limitbit;


LRESULT CALLBACK WndProc(HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam);
void draw(HWND hWnd);
void stage(int level);

int WINAPI WinMain(HINSTANCE hInst,
				   HINSTANCE hPrev,
				   LPSTR lpCmd,
				   int nShow)
{
	
	block[0]=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_WALL));
	block[1]=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_GROUND));
	block[2]=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_WATER));
	block[3]=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_SLOW));
	block[4]=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_FINISH));
	block[5]=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_FAST));
	car=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_CAR));
	madeby=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_MADEBY));
	carmask=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_CARMASK));
	explainbit=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_EXPLAIN));
	levelmask=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_LEVELMASK));
	levelbit=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_LEVEL));
	bgbit=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_BG));
	limitbit=LoadBitmap(hInst,MAKEINTRESOURCE(IDB_LIMIT));
	srand(GetTickCount());
	HWND hWnd;
	WNDCLASS wnd;
	MSG msg;

	wnd.cbClsExtra = 0;
	wnd.cbWndExtra = 0;
	wnd.hbrBackground = (HBRUSH)GetStockObject(GRAY_BRUSH);
	wnd.hCursor = 0;//LoadCursor(hInst,MAKEINTRESOURCE(IDC_CURSOR1));
	wnd.hIcon = 0;//LoadIcon(hInst,MAKEINTRESOURCE(IDI_ICON1));
	wnd.hInstance = hInst;
	wnd.lpfnWndProc = WndProc;
	wnd.lpszClassName = "grerace";
	wnd.lpszMenuName =0;// MAKEINTRESOURCE(IDR_MENU1);
	wnd.style = 0;

	RegisterClass(&wnd);

	hWnd = CreateWindow("grerace","GREMCUS-grerace",WS_OVERLAPPEDWINDOW,CW_USEDEFAULT,CW_USEDEFAULT,700,400,0,0,hInst,0);
	ShowWindow(hWnd,SW_SHOW);

//	selectx++;selecty++;
	while(GetMessage(&msg,0,0,0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return 0;
}
int visit[100];
int check;
LRESULT CALLBACK WndProc(HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam)
{
	int ttype;
	int i, j, k, ax, ay, temp;
	switch(msg)
	{
	case WM_DESTROY:
		PostQuitMessage(1);
		break;
	case WM_CREATE:
		lev=startlev;
		stage(lev);
		break;
	case WM_TIMER:
		if(start)
			tim++;
		if(keybd[VK_LEFT])
		{
			rotate-=0.1;
		}
		if(keybd[VK_RIGHT])
		{
			rotate+=0.1;
		}
		if(keybd[VK_LEFT] && keybd[VK_SHIFT])
		{
			rotate-=0.2;
		}
		if(keybd[VK_RIGHT] && keybd[VK_SHIFT])
		{
			rotate+=0.2;
		}
		if(keybd[VK_UP] && start)
		{
			av+=0.1;
		}
		if(keybd[VK_DOWN] && start)
		{
			av-=0.1;
		}
			v+=av;
			x+=cos(rotate)*v;
			y+=sin(rotate)*v;
		switch(map[int(x)/BSIZE][int(y)/BSIZE])
		{
		case 0:
			av=0;
			x-=cos(rotate)*v;
			y-=sin(rotate)*v;
			v=v*0.8;
			break;
		case 3:
			av*=0.55;
			break;
		case 5:
			av*=2.5;
			break;
		case 2:
			av*=0.92;
			break;
		case 1:
			av*=0.81;
		};
		v*=0.92;
		draw(hWnd);

		if(int(x/BSIZE)==fx && int(y/BSIZE)==fy)
		{
			if(tim<=limit[lev]){
			lev++;
			stage(lev);
			}
		}
		break;
	case WM_KEYDOWN:
		keybd[wParam]=1;
		if(wParam=='S')
		{
			start=1;
		}
		if(wParam=='R')
		{
			stage(lev);
		}
		break;
	case WM_KEYUP:
		keybd[wParam]=0;
		break;
	case WM_COMMAND:
		
		break;
	case WM_PAINT:
		SetTimer(hWnd,1,50,0);
		draw(hWnd);
		break;
	};
	return DefWindowProc(hWnd,msg,wParam,lParam);
}

void draw(HWND hWnd)
{
	int possible;
	int max;
	int i, j, k;
	char str[256];
	HBITMAP bit, *old, *old2;
	HBRUSH *old3, brush;
	HDC hDC;
	HDC MemDC;
	HDC bitDC;

	hDC=GetDC(hWnd);
	bit=CreateCompatibleBitmap(hDC,1200,1200);
	MemDC=CreateCompatibleDC(hDC);
	bitDC=CreateCompatibleDC(hDC);
	//hDC=BeginPaint(hWnd,&ps);
	old = (HBITMAP *)SelectObject(MemDC,bit);

	Rectangle(MemDC,0,0,1024,768);

	SetBkMode(MemDC,0);

	//배경  출력
	//	old2=(HBITMAP *)SelectObject(bitDC,bgbit);
	//	BitBlt(MemDC,0,0,1024,768,bitDC,0,0,SRCCOPY);
	//	SelectObject(bitDC,old2);

//block 출력
	for(i=-100 ; i<=200 ; i++)
	{
		for(j=-100 ; j<=200 ; j++)
		{
			if(i*BSIZE-x+200<-90 || j*BSIZE-y+200<-90)
				continue;
			if(i*BSIZE-x+200>400 || j*BSIZE-y+200>400)
				continue;
			old2=(HBITMAP *)SelectObject(bitDC,block[0]);
			BitBlt(MemDC,i*BSIZE+100-x+200,j*BSIZE+100-y+200,50,50,bitDC,0,0,SRCCOPY);
		//	BitBlt(MemDC,i*BSIZE+100-x+200,j*BSIZE+100-y+200,BSIZE,BSIZE,bitDC,0,0,SRCCOPY);
			SelectObject(bitDC,old2);
		}
	}
	for(i=0 ; i<=100 ; i++)
	{
		for(j=0 ; j<=100 ; j++)
		{
			if(i*BSIZE-x+200<-90 || j*BSIZE-y+200<-90)
				continue;
			if(i*BSIZE-x+200>400 || j*BSIZE-y+200>400)
				continue;
			old2=(HBITMAP *)SelectObject(bitDC,block[map[i][j]]);
			BitBlt(MemDC,i*BSIZE+100-x+200,j*BSIZE+100-y+200,50,50,bitDC,0,0,SRCCOPY);
		//	hBlt(MemDC,i*BSIZE+100-x+200,j*BSIZE+100-y+200,BSIZE,BSIZE,bitDC,0,0,20,20,SRCCOPY);
			SelectObject(bitDC,old2);
		}
	}
	double aax, aay;
	aax=x;
	aay=y;
	x=y=200;
	old2=(HBITMAP *)SelectObject(bitDC,carmask);
	BitBlt(MemDC,x+90,y+90,20,20,bitDC,0,0,SRCAND);
	SelectObject(bitDC,old2);
	old2=(HBITMAP *)SelectObject(bitDC,car);
	BitBlt(MemDC,x+90,y+90,20,20,bitDC,0,0,SRCPAINT);
	SelectObject(bitDC,old2);
	MoveToEx(MemDC,x+100,y+100,0);
	LineTo(MemDC,x+cos(rotate)*5+100,y+sin(rotate)*5+100);
	MoveToEx(MemDC,x+101,y+100,0);
	LineTo(MemDC,x+cos(rotate)*5+101,y+sin(rotate)*5+100);
	MoveToEx(MemDC,x+100,y+101,0);
	LineTo(MemDC,x+cos(rotate)*5+100,y+sin(rotate)*5+101);
	x=aax;
	y=aay;
	/*
	for(i=0 ; i<=100 ; i+=2)
		for(j=0 ; j<=100 ; j+=2)
		{
			SetPixel(MemDC,map[j][i
		}*/
	
	//Rectangle(MemDC,500,0,1000,1000);
	old2=(HBITMAP *)SelectObject(bitDC,bgbit);
	BitBlt(MemDC,500,100,1000,1000,bitDC,0,0,SRCCOPY);
	SelectObject(bitDC,old2);
	old2=(HBITMAP *)SelectObject(bitDC,madeby);
	BitBlt(MemDC,500,300,1000,1000,bitDC,0,0,SRCCOPY);
	SelectObject(bitDC,old2);
	old2=(HBITMAP *)SelectObject(bitDC,levelmask);
	BitBlt(MemDC,500,100,1000,1000,bitDC,0,0,SRCAND);
	SelectObject(bitDC,old2);
	old2=(HBITMAP *)SelectObject(bitDC,explainbit);
	BitBlt(MemDC,500,100,1000,1000,bitDC,0,0,SRCPAINT);
	SelectObject(bitDC,old2);
	old2=(HBITMAP *)SelectObject(bitDC,levelbit);
	BitBlt(MemDC,550,350,1000,1000,bitDC,0,0,SRCCOPY);
	SelectObject(bitDC,old2);
	old2=(HBITMAP *)SelectObject(bitDC,limitbit);
	BitBlt(MemDC,500,430,(limit[lev]-tim)/5,1000,bitDC,0,0,SRCCOPY);
	SelectObject(bitDC,old2);
	
	SetTextColor(MemDC,RGB(255,255,255));
	sprintf(str,"%d단계",lev);
	TextOut(MemDC,630,380,str,strlen(str));
	sprintf(str,"%d/%d",tim,limit[lev]);
	TextOut(MemDC,630,435,str,strlen(str));
	
BitBlt(hDC,0,0,1024,768,MemDC,100,100,SRCCOPY);
	
	SelectObject(MemDC,old);
	ReleaseDC(hWnd,MemDC);
	ReleaseDC(hWnd,bitDC);
	ReleaseDC(hWnd,hDC);
	DeleteObject(bit);
	DeleteObject(old);
	DeleteObject(old2);
	DeleteObject(old3);
	DeleteObject(MemDC);
	DeleteObject(bitDC);
	DeleteObject(hDC);


}

void stage(int level)
{
	int i, j;
	char str[256][256];
	memset(map,0,sizeof(map));
	
	if(level==1)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWW0WG1WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWGWGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWGWGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWGWGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	
	if(level==2)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWW0WR1WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWRWRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWRWRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWRSRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	
	if(level==3)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWW0GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWW1RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	
	if(level==4)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWW0WWWGWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWRRWGRGWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWRRWGWGWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWRRRRWGWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWRRSRW1WWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	
	if(level==5)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRR1WWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRWRRRWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRWWWWWWWW",
			"WWWWWRRRRRRRRRRRRRRRRRRRRRRRRRRRWWWWWWWW",
			"WWWW0RRRRRRRRRRRRRRRRRRRRRWWWWWWWWWWWWWW",
			"WWWWWRRRRRRRRRRRRRRRRRRRRRWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==6)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWSGG0WGGGGGGGSSSSSSSSRRRRRRRRRRWWWW",
			"WWWWSGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWSGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWSGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWSGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWSSGGGWWWWWRRRRRRWWWWWWWWWWWWWWWWWWWW",
			"WWWWWSGGGWWWWWSGGGGSSSWWWWWWWWWWWWWWWWWW",
			"WWWWWSGGGWWWWGGGGRGGGGSSSWWWWWWWWWWWWWWW",
			"WWWWWWSGGGGWGGGSSRRRGGGGSSSSSSSSSWWWWWWW",
			"WWWWWWWSGGGGGGSSWWWWSSSGGGGGGGGGSSSSWWWW",
			"WWWWWWWSSSGGGSSWWWWWWWSSSSSSGGGGGGGSSSSW",
			"WWWWWWWWWSSSSSWWWWWWWWWWWWWWSSSSSGGGGWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRWW",
			"WWWWWWSGGGGGGGGGGGWWWWWWWWWWWWWWWRRRRRWW",
			"WWWWSGGGGGGGGGGGGGRRRRRRRRRRRRRRRRRRRRWW",
			"WWWSGGGWWWWWWWWWWWRRRRRRRRRRRRRRRRRRRRWW",
			"WWWSGGGWWWWWWWWWWWWSSSSSSSSSSSSSSSSSSSWW",
			"WWWWSGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWSSGGGWWWWWRRRRRRWWWWWWWWWWWWWWWWWWWW",
			"WWWWWSGGGWWWWWSGGGGSSSWWWWWWWWWWWWWWWWWW",
			"WWWWWSGGGWWWWGGGGRGGGGSSSWWWWWWWWWWWWWWW",
			"WWWWWWSGGGGWGGGSSRRRGGGGSSSSSSSSSWWWWWWW",
			"WWWWWWWSGGGGGGSSWWWWSSSGGGGGGGGGSSSSWWWW",
			"WWWWWWWSSSGGGSSWWWWWWWSSSSSSGGGGGGGSSSSW",
			"WWWWWWWWWSSSSSWWWWWWWWWWWWWWSSSSSGGGG1WW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==7)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSGGGGGSS",
			"W0GWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSGGGRRGGGG",
			"WSGGSWWWWWWWWWWWSSSSSSWWWWWWWWWWWWWWSSSSSSSGGGGSWWWGGGG",
			"WSSGGGSWWWWWWWSSGGGGGSSSWWWWWWWWWWWWGRRRRRGGGWWWWWWGGGG",
			"WWWSSGGGSWWWWSGGGWWWGGGSSSSSSWWWWWWWGRSSSSSSSWWWWWWGGGG",
			"WWWWSSSGGGSWWSGGGGGWWWGGGGGGSSSWWWWWGRSWWWWWWWWWWSGGGGS",
			"WWWWWSGGGSWWWSSSGGGWWWGGWWWGGGSWWWWWGRGGGWWWWWWWSGGGWWW",
			"WWWWWSGGGSWWSGGGGGWWWWGGWWWWGGSWWWWWWWRGGRWWWWWSGGGWWWW",
			"WWWWWSGGGSWSGGGGGGWWWWGGSSSSGGSWWWWWWWRGGRWWWWWSGGGWWWW",
			"WWWWWSGGGSWSGGGWWWWWWWRRRRRRRRSSSSSSSSSGGWWWWWWSGGGWWWW",
			"WWWWWSGGGSWSGGGWWWWWWWGGGGGGGGGGGGGGGGGGGWWWWWWSGGGWWWW",
			"WWWWWSGGGSSGGGWWWWWWWWGGGGGGGGGGGGGGGGGGGWWWWWWSGGGWWWW",
			"WWWWWSSSGGGGSWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSGGGWWWW",
			"WWWWWWWSSSSSSWWWWWWWWWWSSSSSSSSSSSSSSSSSSSSSSSSSGGSWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWGGGGGGGGGGGGGSSSGGGGGGGGGGGWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWGGGGGWWWWWWWWGGGGGGGGGGGGGGGRSWWWWW",
			"WWWWWWWWWWWWWWWWWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWRSWWWWW",
			"WWWWWWWWWWWWWWWWWW1SSSSSSSSSSSSSSSSSSSSSSSSSSSSSRSWWWWW",
			"WWWWWWWWWWWWRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRSWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSSSWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==8)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWG1W0GGGGGGGGGGRRRRRRRWWWWWWWWWWWW",
			"WWWWWWSSSSSSSSSSSSSSSSSSSSGWWWWWWWWWWWWGGGGGGGGSSSSSSSSWWWW",
			"WWWWWWGGGGGGGGGGGGGGGGGGGGGWWWWWWWWWWWWWWWWWWWGGGGGGGGGWWWW",
			"WWWWWSGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGWWW",
			"WWWWWWGGGGGSSWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGWWW",
			"WWWWWWWWWGGGRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRGGGWW",
			"WWWWWGGGGGRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSGGGWW",
			"WWWGGGRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRGGGWW",
			"WWWGGGRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRGGGWW",
			"WWWGGGGRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGGSSWW",
			"WWWWWWGGGGGRRRRRSWWWWWWWWWWWWWWWWWWWWWWWWWWWSGGGGGGSSSSWWWW",
			"WWWWWWWWWGGGGGGGGRSRSRSRSRSRSRSWWWWWWWWWWWRGGGGGGHHHHHHWWWW",
			"WWWWWWWWWWWWWWWWGGGGGGGGGGGGGGGGGGGGGWWWGGGGGGGSSSSSSSWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSSSSSSGGGGGGGGSSSWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRRWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==9)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWR1W0RRRRRRRRRRRRRRRRRWWWWWWWWWWWW",
			"WWWWWWSSSSSSSSSSSSSSSSSSSSRWWWWWWWWWWWWRRRRRRRRSSSSSSSSWWWW",
			"WWWWWWRRRRRRRRRRRRRRRRRRRRRWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWW",
			"WWWWWSRRWWWWWWWWWWWWWWWWWWSWWWWWWWWWWWWWWWWWWWWWWWWWWRRRWWW",
			"WWWWWWRRRRRSSWWWWWWWWWWWWWSWWWWWWWWWWWWWWWWWWWWWWWWWWRRRWWW",
			"WWWWWWWWRRRRRRWWWWWWWWWWWWSWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRWW",
			"WWWWWRRRRRRRWWWWWWWWWWWWWWSWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRWW",
			"WWWRRRRRWWWWWWWWWWWWWWWWWWSWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRWW",
			"WWWRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRWW",
			"WWWRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRSSWW",
			"WWWWWWRRRRRRRRRRSWWWWWWWWWSWWWWWWWWWWWWWWWWWSRRRRRRSSSSWWWW",
			"WWWWWWWWWRRRRRRRRRSRSRSRSRSRSRSWWWWWWWWWWWRRRRRRRHHHHHHWWWW",
			"WWWWWWWWWWWWWWWWRRRRRRRRRRRRRRRRRRRRRWWWRRRRRRRSSSSSSSWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSSSSSSRRRRRRRRSSSWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRRWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==10)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWW0WWWWWWWWWWWWWWWWWWWRRRWWWWWWWWWSSSSSSSSSSSSSSSSWWWWWWWW",
			"WWGRGWWWWWWWWWWWWWWWWWSRRRSWWWWWWWWGGGGGGGGGGGGGGGGWWWWWWWW",
			"WWGRGWWWWWWWWWWWWWWWWRRRWRRWWWWWWWWRRRRRRRRRRRRRRRRWWWWWWWW",
			"WWGRGWWWWWWWWWWWWWWWWRRRWGGWWWWWWWWGGGWWWWWWWWWWWRRWWWWWWWW",
			"WWWGRRGWWWWWWWWWWWWWWRRRWGGSWWWWWWWGSGWWWWWWWWWWSGGGSWWWWWW",
			"WR1WWGRRGWWWWWWWWWWWWRRRWGGGGWWWWWWGGGWWWWWWWWWWSGGGSWWWWWW",
			"WRSSWWWGRRGGGGGWWWWWWGGGSWWGGWWWWWWSGSWWWWWWWWWWWRRRWWWWWWW",
			"WRSSWWWWGGSSSSGGGWWWWWWSGGWGGGWWWWWGGGWWWWWWWWWWWSGSWWWWWWW",
			"WRSSWWWWWGGGSSSSGGGWWWWWSGGWGGWWWWWGSGWWWWWWWWWWWRRRWWWWWWW",
			"WRSSSWWWWWWGGGSSSSGWWWWWSGGWGGGGGWWGGSWWWWWWWWWWWGSGWWWWWWW",
			"WRGGGWWWWWWWWGGGGGGWWWWSGGWWSSSSGWWGGSWWWWWWWWWWWRRRWWWWWWW",
			"WWGGGWWWWWWWWWWWWWGGGWWSSGWWSSSSGWWGGSWWWWWWWWWWWSGSWWWWWWW",
			"WWGGGWWWWWWWWWWWWWWSGSWWRGWWGGGGGGGGGSWWWWWWWWWWWSGSWWWWWWW",
			"WWGGGWWWWWWWWWWWWWWWRRRRRWWWWWWWWWWWWWWWWWWWWWWWWRRRWWWWWWW",
			"WWGGGWWWWWWWWWWWWWWWWWWWWWRRRRRWWWWWWWWWWWWWWWWWWGSGWWWWWWW",
			"WWGGGSWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWRRRRRRRRRRRGSGWWWWWWW",
			"WWSSSSSSSSSSSSSSSSSSSRRRRRSWWRRRRRRRRRRRRRRRRRRRRRRWWWWWWW",
			"WWGGGGGGGGGGGGGGGGGGGGRRRRRWWWRRRRRRRRRRWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==11)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGWWWW",
			"WW1W0FGGGGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGWWWW",
			"WWFWWFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGWWWW",
			"WWGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGFGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGFGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGFGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGFGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGGWWWW",
			"WWGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGWWWW",
			"WWGGGGGGGGGGFGGGGGGGGGGGGGFGGGGGGGGGGGGGFGGGGGGGGGGGGGGWWWW",
			"WWGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==12)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWG1WWW",
			"WWWWWWWWWWWWWWWWWWWWWSSGSSSWWWWWWWWWWWWWWWWWWWWWWWWWWWGSWWW",
			"WWWWWWWWWWWWWWWWWWWWSRRGSSSWWWWWWWWWWWWWWWWWWWWWWWWWWWGSWWW",
			"WWWWWWWWWWWWWWWWWWWSFRRGSSSWWWWWWWWWWWWWWWWWWWWWWWWWWWGSWWW",
			"WWWWWWWWWWWWWWWWWWWSSSWWSSSWWWWWWWWWWWWWWWWWWWWWWWWWWWGSWWW",
			"WWWWWWWWWWWWWWWWWWWSSSWWSSSWWWWWWWWWWWWWWWWWWWWWWWWWWFFFWWW",
			"WWWWWWWWWWWWWWWWWWWSSSWWSSSWWWWGGGGGGGGGGGGGGGGGGGGGGGGGWWW",
			"WWWWWWWWWGGGGGGGGGGGGWWWSSSWWWWSSSSSSSSSSSSSSSSSSSSSSSSSWWW",
			"WWWWWWWWGGGGGGGGGGGGGWWWSSSWWWWSSSSFFFFFFFFFFFFGGGGGGGGGWWW",
			"WWWWWWWWGGGWWWWWWWWWWWWWSSSWWWWRRWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWWWWWWGGGGGGWWWWWWWWWWSSSWWWWSSWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWWWWSGGGGGGGSWWWWWWWWWFFFWWWWRRWWWWWWWWWWWWWWWWWWWWWSWWWW",
			"WWWWWSGGGSWSGFFGWWWWWWWWW0WWWWWSSWWWWWWWWWWWWWGGGGGGGGGWWWW",
			"WWWWWWRRRWWWWGGGWWWWGSSSGWWWWWWRRWWWWWWWWWWWWWGGGGGGGGGWWWW",
			"WWWWWWSSSWWWWWGGGSWWGGGGGWWWWWWFFWWWWWWWWWWWWWSSSGGGGGGWWWW",
			"WWWWWWGGGWWWWWGGGGGGGGWGGGGGWWWFFWWWWWWWWWWWWWFFFWWWWWWWWWW",
			"WWWWWWGGGWWWWWGGGGGGGGWWGGGGGGWGGWWWWWWWWWWWWWGGGWWWWWWWWWW",
			"WWWWWWGGGWWWWWWWSSWWWWWWWWWSSSSGGWWWWWWWWWWWWWGGGWWWWWWWWWW",
			"WWWWWWGGGGGGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGGWWWWWWWWWW",
			"WWWWWWGGGGGGFSSSSSSSSSSSSSSSSSSSSSSSSFSGGGGGGGGGGWWWWWWWWWW",
			"WWWWWWGGGGGGFFSSSSSSSSSSSSSSSSSSSSSSSFSGGGGGGGGGGWWWWWWWWWW",
			"WWWWWWGGGGGGFSSSSSSSSSSSSSSSSSSSSSSSSFSGGGGGGSSSSWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==13)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWGGGGWGGGWGGGWGGGGGGWWWWWWSFSSSSSSSSSSSGGGGGGGGGGGGWW",
			"WWWWWSGSWWGGGWGGGWGGGWWWSGWWWWWSSWGGGGGGGGGGGGSSSSSSSSSGGWW",
			"WWWWWGGGWWWWWWWWWWWWWWWWWGRRRRRRRWWWWWWWWWWWWWWWWWWWWGGGGWW",
			"WWWWWGSGWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWFSWWWW",
			"WWWWWGSGWWWWWGGGGGGGGGGGGGGGGGGGGGGSSSRRRRRRRRRRRRRWWSSWWWW",
			"WWWWWGGGWWWWWGGSWWWWWWWWWWWWWWGGSSSGGGRRRRRRRRRRRRRWWSSWWWW",
			"WGGGGGSWWWWWWGGGGGGGGGGGGGGWWWWWWWWWWWWWWWWWWWWWRSRWWSSWWWW",
			"WGGGGGWWWWWWWWWWWWWWWWWWWGGWWWWWWWWWWWWWWWWWWWRSRWWWWSSWWWW",
			"WGGGWWWWWWWWWGGFSSSSSSSSSGGWWSSSWWWWWWWWWWWWRSRWWWWWWSSSGWW",
			"WGGRWWWWWWRRGGGFSSSSSSSSSGGWWSWSWWWWWWWWWWRSRWWWWWWWWWWGGWW",
			"WGGRRWWWWWRRWWWWWWWWWWWWWWWWWSWSWWWWWWWWRSRWWWWWWWWWWWWGGWW",
			"WWWRRRSRWWRRWWWWWWWWWWWWWWWWWSWSWWWWWWRSRWWWWWWWWWWWWWWGGWW",
			"WWWWRRSRWWRRRRRRRWWWWWWWWWWWWSWSWWWWGGGWWWWWWWWWWWWWWWWGGWW",
			"WWWWWRSRWWRRRRRRRWWR1SSSSSWWWSWSSSGGGWWWWWWWWWWWWWWWWWGGWWW",
			"WWWWWRSRWWWWWWWRRWWRWWWWWSWWWSWWWWWWRWWWWWWWWWWWWWWWWWWGGWW",
			"WWWWWGRGWWWWWWWRRWWRRWWWWSWWWSWWWWWWRWWWWWWWWWWWWWWWWWGGWWW",
			"WWWWWGRGWWWWWWWRRWWWRRWWWSWWWSWWWWWWRWWWWWWWWWWWWWWWWWWGGWW",
			"WWWWWGRGWWWWWWWRRWWWWRWWWSSSSSWWWWWWRWWWWWWWWWWWWWWWWWGGWWW",
			"WWWWGGGWWWRRRRRRRWWWRRWWWWWWWWWWWWWWRWWWWWWWWWWWWWWWWWWGGWW",
			"WWWGGGWWWWRRRRRRRWWWRWWWWRSRRRSRWWWWRWWWWWWWWWWWWWWWWGGGWWW",
			"WWWGSGWWWWRRWWWWWWWWRWWWWSWWWWWSWWWWRWWWWWWWWWWWWWWWWGWWWWW",
			"WWWGSGWWWWRRWWWWWWWWSWWWWSWWWWWRWWWWSWWWWWWWWWWWWWWWWGGGWWW",
			"WWWGSGWWWWRRWWWWWWWWRSRRSRWWWWWRRRRSRWWWWWWWWWWWWWWWWWWGWWW",
			"WWWSSSWWWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGGGW",
			"WWWSFSWWWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWGW",
			"WWWWSWWWWWRRRRRRRRRRRRRRRRSSSSSSSSSRRRRRRRRRSSSSSSSSSSSGGGW",
			"WWWW0WWWWWRRRRRRRRRRRRRRRRSSSSSSSSRSSSSSSSSSRRRRRRRRRRRRWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
	if(level==14)
	{
		char temp[256][256]=
		{
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
			"WWW0WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW1WWWWWW",
			"WWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSRRWWWWW",
			"WWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRWWWWW",
			"WWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWWWWWWSRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRSWWWWWWWWWWW",
			"WWWWWWWWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRWWWWWWWWWWWW",
			"WWWWWWWWSRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRSWWWWWWWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRSWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSRRWWWWW",
			"WWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRWWWWW",
			"WWWRRSWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWWWWWWSRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRSWWWWWWWWWWW",
			"WWWWWWWWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRWWWWWWWWWWWW",
			"WWWWWWWWSRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRSWWWWWWWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRSWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSRRWWWWW",
			"WWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRWWWWW",
			"WWWRRSWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWSRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWWWWWWSRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRSWWWWWWWWWWW",
			"WWWWWWWWWRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRWWWWWWWWWWWW",
			"WWWWWWWWSRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRSWWWWWWWWWWW",
			"WWWRRRRRRRRWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRRRRRRRSWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRRRRRRRRRWWWWW",
			"WWWRRRRRRRRRFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRWWWWW",
			"WWWRRRRRRRRRFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRWWWWW",
			"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
		};
		memcpy(str,temp,sizeof(temp));
	}
for(i=0 ; i<=100 ; i++)
	for(j=0 ; j<=100 ; j++){
		switch(str[i][j])
	{
		case 'W':
			map[j][i]=0;
			break;
		case 'G':
			map[j][i]=1;
			break;
		case 'R':
			map[j][i]=2;
			break;
		case 'S':
			map[j][i]=3;
			break;
		case 'F':
			map[j][i]=5;
			break;
		case '0':
			sx=j;
			map[j][i]=4;
			sy=i;
			break;
		case '1':
			fx=j;
			fy=i;
			map[j][i]=4;
			break;
	};
	}
	x=sx*BSIZE;
	y=sy*BSIZE;
	av=v=0;
	tim=0;
	start=0;
}